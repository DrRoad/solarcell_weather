ggplot(data = solarcell_tbl_fit
, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_line(aes(y=lwr), color = "red", linetype = "dashed") +
geom_line(aes(y=upr), color = "red", linetype = "dashed") +
geom_smooth(method=lm, level=0.50, se=TRUE)
fit_sonne_prod$coefficients
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_line(aes(y=lwr), color = "red", linetype = "dashed") +
geom_line(aes(y=upr), color = "red", linetype = "dashed") +
geom_smooth(se=FALSE, method="lm", formula = y ~ poly(x, 4, raw =T))
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ poly(x, 4, raw =T))
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T))
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(aes(fill='gree'),se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T))
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(aes(fill='green'),se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T))
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(aes(fill=Produktion),se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T))
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(aes( colour="#CC0000"),se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T))
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(aes(fill(values=c('red'))),se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T))
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue")
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue", level =0.5)
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue", level =1)
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue", level =0.9)
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue", level =0.95)
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue", level =0.99)
fit_sonne_prod <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer)
prd <- predict(fit_sonne_prod, interval="prediction")
solarcell_tbl_fit <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit
, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_line(aes(y=lwr), color = "red", linetype = "dashed") +
geom_line(aes(y=upr), color = "red", linetype = "dashed") +
geom_smooth(method=lm, level=0.99, se=TRUE, color="darkred", fill="blue")
fit_sonne_prod$coefficients
?polym
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ polym(x,solarcell_tbl$`Lufttemperatur Tagesmittel` , 2, raw =T), color="darkred", fill="blue", level =0.99)
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ polym(x,   2, raw =T), color="darkred", fill="blue", level =0.99)
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x,   2, raw =T), color="darkred", fill="blue", level =0.99)
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ polym(x,   2, raw =T), color="darkred", fill="blue", level =0.99)
?polym
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`)
)
knitr::opts_chunk$set(echo = TRUE)
#load solarzellen data
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
source("summary_se.R")
source("solar_auswertung.R")
dir_name = "solarzellen_data"
solarcell_files_names = list.files(path = dir_name, pattern="/*.csv")
solarcell_files_names<- paste(dir_name, solarcell_files_names, sep = "/")
solarcell_tbl <- data_frame("datum"=character(0), "zaehlerstand_morgens"= numeric(0), "zaehlerstand_abends" = numeric(0),"produktion"= numeric(0),"eigen_verbrauch"= numeric(0),"eingespeist"= numeric(0))
solarcell_tbl = lapply(solarcell_files_names, read_csv2) %>% bind_rows()
#using lubridate to make the 'Datum' column more usefull
solarcell_tbl$Datum <- dmy(solarcell_tbl$Datum)
solarcell_tbl$YEAR <- year(solarcell_tbl$Datum)
solarcell_tbl$MONTH <- month(solarcell_tbl$Datum)
solarcell_tbl$DAY <- day(solarcell_tbl$Datum)
solarcell_tbl_avg <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
#summary over for months
solarcell_tbl_avg %>%
group_by( MONTH) %>%
summarise_at(vars(Produktion), funs(mean,sd))
#summary over for year
solarcell_tbl_avg %>%
group_by(YEAR) %>%
summarise_at(vars(Produktion), funs(mean,sd))
solarcell_tbl$rating <- sapply(solarcell_tbl$Produktion, wetter)
y <- solarcell_tbl$Produktion
t <- 1:nrow(solarcell_tbl)
x <- solarcell_tbl$Datum
# sinus fit
#1
ssp <- spectrum(y)
per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
reslm <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t))
summary(reslm)
rg <- diff(range(y))
plot(y~t,ylim=c(min(y)-0.1*rg,max(y)+0.1*rg))
lines(fitted(reslm)~t,col=4,lty=1)   # dashed blue line is sin fit
# including 2nd harmonic really improves the fit
reslm2 <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t)+sin(4*pi/per*t)+cos(4*pi/per*t))
summary(reslm2)
lines(fitted(reslm2)~t,col=3)
#2 fft
raw.fft = fft(y)
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x))
solarcell_tbl$YEAR <- year(solarcell_tbl$Datum)
solarcell_tbl$MONTH <- month(solarcell_tbl$Datum)
solarcell_tbl$DAY <- day(solarcell_tbl$Datum)
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_point() +
facet_wrap(~YEAR) +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x))
ggplot(data = solarcell_tbl_avg, aes(x = MONTH, y = Produktion )) +
geom_bar(aes(fill=YEAR), position=position_dodge(.9), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
xx <-1:nrow(solarcell_tbl_avg)
ggplot(data = solarcell_tbl_avg, aes(x=xx, y = Produktion )) + geom_bar( stat="identity", width = 0.5)
ggplot(data = solarcell_tbl, aes(rating)) + geom_histogram(stat="count") + facet_wrap(~YEAR)
atmospheric_conditions_df <- atm_condition_fn(solarcell_tbl, "rating")
atmospheric_conditions_df$atm_condition <- factor(atmospheric_conditions_df$atm_condition)
ggplot(data = atmospheric_conditions_df, aes(x=duration, fill = atm_condition)) + geom_histogram(binwidth=.5, position = "dodge") +
scale_x_continuous(breaks = round(seq(min(atmospheric_conditions_df$duration), max(atmospheric_conditions_df$duration), by = 1),1))
ggplot(data = atmospheric_conditions_df, aes(x=duration)) + geom_histogram(binwidth=.5, position = "identity") +
facet_wrap(~atm_condition)
scale_x_continuous(breaks = round(seq(min(atmospheric_conditions_df$duration), max(atmospheric_conditions_df$duration), by = 1),1))
weather_data <- read_csv2(file = "weste_product_2018_03_10__09_21_28/weste_product_2018_03_10__09_21_27.csv")
weather_data$Datum <- parse_date_time(weather_data$Datum, "ymd")
str(weather_data)
tmp <- weather_data[c("Datum", "Element", "Wert")]
temp2 <- tidyr::spread(tmp, key = Element, value = Wert)
temp2$Datum <- ymd(temp2$Datum)
solarcell_tbl <- inner_join(solarcell_tbl, temp2)
fit_sonne_prod <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer)
prd <- predict(fit_sonne_prod, interval="prediction")
solarcell_tbl_fit <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_line(aes(y=lwr), color = "red", linetype = "dashed") +
geom_line(aes(y=upr), color = "red", linetype = "dashed") +
geom_smooth(method=lm, level=0.99, se=TRUE, color="darkred", fill="blue")
fit_sonne_prod$coefficients
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue", level =0.99)
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`))
prd <- predict(fit_sonne_prod_polym, interval="prediction")
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ fit_sonne_prod_polym, color="darkred", fill="blue", level =0.99)
fit_sonne_prod_polym
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`))
prd <- predict(fit_sonne_prod_polym, interval="prediction")
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`), color="darkred", fill="blue", level =0.99)
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`,degree=2, raw=TRUE))
prd <- predict(fit_sonne_prod_polym, interval="prediction")
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel` degree=2, raw=TRUE), color="darkred", fill="blue", level =0.99)
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`, degree=2, raw=TRUE))
prd <- predict(fit_sonne_prod_polym, interval="prediction")
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`, degree=2, raw=TRUE), color="darkred", fill="blue", level =0.99)
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`, degree=2, raw=TRUE))
prd <- predict(fit_sonne_prod_polym, interval="prediction")
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="loess", color="darkred", fill="blue", level =0.99)
#              , formula = y ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`, degree=2, raw=TRUE))
library(ISLR)
install.packages("ISLR")
install.packages("MASS")
library(ISLR)
library(MASS)
fix(Boston)
?fix
library(ISLR)
library(MASS)
fix(Boston)
knitr::opts_chunk$set(echo = TRUE)
#load solarzellen data
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ISLR)
library(MASS)
source("summary_se.R")
source("solar_auswertung.R")
dir_name = "solarzellen_data"
solarcell_files_names = list.files(path = dir_name, pattern="/*.csv")
solarcell_files_names<- paste(dir_name, solarcell_files_names, sep = "/")
solarcell_tbl <- data_frame("datum"=character(0), "zaehlerstand_morgens"= numeric(0), "zaehlerstand_abends" = numeric(0),"produktion"= numeric(0),"eigen_verbrauch"= numeric(0),"eingespeist"= numeric(0))
solarcell_tbl = lapply(solarcell_files_names, read_csv2) %>% bind_rows()
#using lubridate to make the 'Datum' column more usefull
solarcell_tbl$Datum <- dmy(solarcell_tbl$Datum)
solarcell_tbl$YEAR <- year(solarcell_tbl$Datum)
solarcell_tbl$MONTH <- month(solarcell_tbl$Datum)
solarcell_tbl$DAY <- day(solarcell_tbl$Datum)
solarcell_tbl_avg <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
#summary over for months
solarcell_tbl_avg %>%
group_by( MONTH) %>%
summarise_at(vars(Produktion), funs(mean,sd))
#summary over for year
solarcell_tbl_avg %>%
group_by(YEAR) %>%
summarise_at(vars(Produktion), funs(mean,sd))
solarcell_tbl$rating <- sapply(solarcell_tbl$Produktion, wetter)
y <- solarcell_tbl$Produktion
t <- 1:nrow(solarcell_tbl)
x <- solarcell_tbl$Datum
# sinus fit
#1
ssp <- spectrum(y)
per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
reslm <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t))
summary(reslm)
rg <- diff(range(y))
plot(y~t,ylim=c(min(y)-0.1*rg,max(y)+0.1*rg))
lines(fitted(reslm)~t,col=4,lty=1)   # dashed blue line is sin fit
# including 2nd harmonic really improves the fit
reslm2 <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t)+sin(4*pi/per*t)+cos(4*pi/per*t))
summary(reslm2)
lines(fitted(reslm2)~t,col=3)
#2 fft
raw.fft = fft(y)
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x))
solarcell_tbl$YEAR <- year(solarcell_tbl$Datum)
solarcell_tbl$MONTH <- month(solarcell_tbl$Datum)
solarcell_tbl$DAY <- day(solarcell_tbl$Datum)
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_point() +
facet_wrap(~YEAR) +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x))
ggplot(data = solarcell_tbl_avg, aes(x = MONTH, y = Produktion )) +
geom_bar(aes(fill=YEAR), position=position_dodge(.9), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
xx <-1:nrow(solarcell_tbl_avg)
ggplot(data = solarcell_tbl_avg, aes(x=xx, y = Produktion )) + geom_bar( stat="identity", width = 0.5)
ggplot(data = solarcell_tbl, aes(rating)) + geom_histogram(stat="count") + facet_wrap(~YEAR)
atmospheric_conditions_df <- atm_condition_fn(solarcell_tbl, "rating")
atmospheric_conditions_df$atm_condition <- factor(atmospheric_conditions_df$atm_condition)
ggplot(data = atmospheric_conditions_df, aes(x=duration, fill = atm_condition)) + geom_histogram(binwidth=.5, position = "dodge") +
scale_x_continuous(breaks = round(seq(min(atmospheric_conditions_df$duration), max(atmospheric_conditions_df$duration), by = 1),1))
ggplot(data = atmospheric_conditions_df, aes(x=duration)) + geom_histogram(binwidth=.5, position = "identity") +
facet_wrap(~atm_condition)
scale_x_continuous(breaks = round(seq(min(atmospheric_conditions_df$duration), max(atmospheric_conditions_df$duration), by = 1),1))
weather_data <- read_csv2(file = "weste_product_2018_03_10__09_21_28/weste_product_2018_03_10__09_21_27.csv")
weather_data$Datum <- parse_date_time(weather_data$Datum, "ymd")
str(weather_data)
tmp <- weather_data[c("Datum", "Element", "Wert")]
temp2 <- tidyr::spread(tmp, key = Element, value = Wert)
temp2$Datum <- ymd(temp2$Datum)
solarcell_tbl <- inner_join(solarcell_tbl, temp2)
fit_sonne_prod <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer)
prd <- predict(fit_sonne_prod, interval="prediction")
solarcell_tbl_fit <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_line(aes(y=lwr), color = "red", linetype = "dashed") +
geom_line(aes(y=upr), color = "red", linetype = "dashed") +
geom_smooth(method=lm, level=0.99, se=TRUE, color="darkred", fill="blue")
fit_sonne_prod$coefficients
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue", level =0.99)
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`, degree=2, raw=TRUE))
prd <- predict(fit_sonne_prod_polym, interval="prediction")
ggplot(data = solarcell_tbl, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="loess", color="darkred", fill="blue", level =0.99)
#              , formula = y ~ polym(solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`, degree=2, raw=TRUE))
summary(fit_sonne_prod)
fit_sonne_prod_multi <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer +  solarcell_tbl$`Lufttemperatur Tagesmittel` + solarcell_tbl$Windspitze)
summary(fit_sonne_prod_multi)
fit_sonne_prod_multi <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer +  solarcell_tbl$`Lufttemperatur Tagesmittel` + solarcell_tbl$Windspitze)
summary(fit_sonne_prod_multi)
fit_sonne_prod_multi <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer +  solarcell_tbl$`Lufttemperatur Tagesmittel` + solarcell_tbl$Windspitze)
vif(fit_sonne_prod_multi)
library(car)
install.packages("car")
library(car)
vif(fit_sonne_prod_multi)
?vif
vif(fit_sonne_prod_multi)
sqrt(1.374828)
sqrt(1.411425)
sqrt(1.06)
knitr::opts_chunk$set(echo = TRUE)
#load solarzellen data
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ISLR)
library(MASS)
library(car)
source("summary_se.R")
source("solar_auswertung.R")
fit_sonne_prod_multi <- lm(solarcell_tbl$Produktion ~ polym( solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`,solarcell_tbl$Windspitze))
fit_sonne_prod_multi <- lm(solarcell_tbl$Produktion ~ polym( solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`,solarcell_tbl$Windspitze, degree = 2, raw=TRUE))
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym( solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`,solarcell_tbl$Windspitze, degree = 2, raw=TRUE))
summary(fit_sonne_prod_polym)
fit_sonne_prod_multi <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer +  solarcell_tbl$`Lufttemperatur Tagesmittel` + solarcell_tbl$Windspitze)
summary(fit_sonne_prod_multi)
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym( solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`,solarcell_tbl$Windspitze, degree = 4, raw=TRUE))
summary(fit_sonne_prod_polym)
residuals(fit_sonne_prod_polym)
knitr::opts_chunk$set(echo = TRUE)
#load solarzellen data
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ISLR)
library(MASS)
library(car)
source("summary_se.R")
source("solar_auswertung.R")
dir_name = "solarzellen_data"
solarcell_files_names = list.files(path = dir_name, pattern="/*.csv")
solarcell_files_names<- paste(dir_name, solarcell_files_names, sep = "/")
solarcell_tbl <- data_frame("datum"=character(0), "zaehlerstand_morgens"= numeric(0), "zaehlerstand_abends" = numeric(0),"produktion"= numeric(0),"eigen_verbrauch"= numeric(0),"eingespeist"= numeric(0))
solarcell_tbl = lapply(solarcell_files_names, read_csv2) %>% bind_rows()
#using lubridate to make the 'Datum' column more usefull
solarcell_tbl$Datum <- dmy(solarcell_tbl$Datum)
solarcell_tbl$YEAR <- year(solarcell_tbl$Datum)
solarcell_tbl$MONTH <- month(solarcell_tbl$Datum)
solarcell_tbl$DAY <- day(solarcell_tbl$Datum)
solarcell_tbl_avg <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
#summary over for months
solarcell_tbl_avg %>%
group_by( MONTH) %>%
summarise_at(vars(Produktion), funs(mean,sd))
#summary over for year
solarcell_tbl_avg %>%
group_by(YEAR) %>%
summarise_at(vars(Produktion), funs(mean,sd))
solarcell_tbl$rating <- sapply(solarcell_tbl$Produktion, wetter)
y <- solarcell_tbl$Produktion
t <- 1:nrow(solarcell_tbl)
x <- solarcell_tbl$Datum
# sinus fit
#1
ssp <- spectrum(y)
per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
reslm <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t))
summary(reslm)
rg <- diff(range(y))
plot(y~t,ylim=c(min(y)-0.1*rg,max(y)+0.1*rg))
lines(fitted(reslm)~t,col=4,lty=1)   # dashed blue line is sin fit
# including 2nd harmonic really improves the fit
reslm2 <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t)+sin(4*pi/per*t)+cos(4*pi/per*t))
summary(reslm2)
lines(fitted(reslm2)~t,col=3)
#2 fft
raw.fft = fft(y)
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x))
solarcell_tbl$YEAR <- year(solarcell_tbl$Datum)
solarcell_tbl$MONTH <- month(solarcell_tbl$Datum)
solarcell_tbl$DAY <- day(solarcell_tbl$Datum)
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_point() +
facet_wrap(~YEAR) +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x))
ggplot(data = solarcell_tbl_avg, aes(x = MONTH, y = Produktion )) +
geom_bar(aes(fill=YEAR), position=position_dodge(.9), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
xx <-1:nrow(solarcell_tbl_avg)
ggplot(data = solarcell_tbl_avg, aes(x=xx, y = Produktion )) + geom_bar( stat="identity", width = 0.5)
ggplot(data = solarcell_tbl, aes(rating)) + geom_histogram(stat="count") + facet_wrap(~YEAR)
atmospheric_conditions_df <- atm_condition_fn(solarcell_tbl, "rating")
atmospheric_conditions_df$atm_condition <- factor(atmospheric_conditions_df$atm_condition)
ggplot(data = atmospheric_conditions_df, aes(x=duration, fill = atm_condition)) + geom_histogram(binwidth=.5, position = "dodge") +
scale_x_continuous(breaks = round(seq(min(atmospheric_conditions_df$duration), max(atmospheric_conditions_df$duration), by = 1),1))
ggplot(data = atmospheric_conditions_df, aes(x=duration)) + geom_histogram(binwidth=.5, position = "identity") +
facet_wrap(~atm_condition)
scale_x_continuous(breaks = round(seq(min(atmospheric_conditions_df$duration), max(atmospheric_conditions_df$duration), by = 1),1))
weather_data <- read_csv2(file = "weste_product_2018_03_10__09_21_28/weste_product_2018_03_10__09_21_27.csv")
weather_data$Datum <- parse_date_time(weather_data$Datum, "ymd")
str(weather_data)
tmp <- weather_data[c("Datum", "Element", "Wert")]
temp2 <- tidyr::spread(tmp, key = Element, value = Wert)
temp2$Datum <- ymd(temp2$Datum)
solarcell_tbl <- inner_join(solarcell_tbl, temp2)
fit_sonne_prod <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer)
prd <- predict(fit_sonne_prod, interval="prediction")
solarcell_tbl_fit <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_line(aes(y=lwr), color = "red", linetype = "dashed") +
geom_line(aes(y=upr), color = "red", linetype = "dashed") +
geom_smooth(method=lm, level=0.99, se=TRUE, color="darkred", fill="blue")
#summary(fit_sonne_prod)fit_sonne_prod$coefficients
summary(fit_sonne_prod)
fit_sonne_prod4 <- lm(solarcell_tbl$Produktion ~ poly(solarcell_tbl$Sonnenscheindauer, 4, raw =T), data = solarcell_tbl)
prd4 <- predict(fit_sonne_prod4, interval="prediction")
solarcell_tbl_fit4 <- cbind(solarcell_tbl, prd)
ggplot(data = solarcell_tbl_fit4, aes(x = Sonnenscheindauer, y = Produktion)) +
geom_point() +
geom_smooth(se=TRUE, method="lm", formula = y ~ poly(x, 4, raw =T), color="darkred", fill="blue", level =0.99)
fit_sonne_prod_multi <- lm(solarcell_tbl$Produktion ~ solarcell_tbl$Sonnenscheindauer +  solarcell_tbl$`Lufttemperatur Tagesmittel` + solarcell_tbl$Windspitze)
summary(fit_sonne_prod_multi)
vif(fit_sonne_prod_multi)
fit_sonne_prod_polym <- lm(solarcell_tbl$Produktion ~ polym( solarcell_tbl$Sonnenscheindauer, solarcell_tbl$`Lufttemperatur Tagesmittel`,solarcell_tbl$Windspitze, degree = 2, raw=TRUE))
summary(fit_sonne_prod_polym)
solarcell_tbl_avg <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
#summary over for months
solarcell_tbl_avg %>%
group_by( MONTH) %>%
summarise_at(vars(Produktion), funs(sum, mean,sd))
#summary over for year
solarcell_tbl_avg %>%
group_by(YEAR) %>%
summarise_at(vars(Produktion), funs(sum, mean,sd))
sum(solarcell_tbl$Produktion)
sum(solarcell_tbl$Produktion[1,365])
sum(solarcell_tbl$Produktion[1:365])
solarcell_tbl_avg %>% group_by(YEAR) %>% sum(Produktion)
solarcell_tbl %>% group_by(YEAR) %>% sum(solarcell_tbl$Produktion)
solarcell_tbl %>%
group_by(YEAR) %>%
summarise_at(vars(Produktion), funs(sum, mean,sd))

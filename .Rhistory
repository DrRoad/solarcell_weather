tmp <-read_csv(solarcell_files_names[2], skip=1)
#load solarzellen data
library(readr)
library(dplyr)
dir_name = "solarzellen_data"
solarcell_files_names = list.files(path = dir_name, pattern="/*.csv")
solarcell_files_names<- paste(dir_name, solarcell_files_names, sep = "/")
solarcell_tbl <- data_frame("datum"=character(0), "zaehlerstand_morgens"= numeric(0), "zaehlerstand_abends" = numeric(0),"produktion"= numeric(0),"eigen_verbrauch"= numeric(0),"eingespeist"= numeric(0))
for(file in  solarcell_files_names) {
tmp <- read_csv(file, skip = 1)
bind_rows(solarcell_tbl,tmp)
}
tmp <-read_csv(solarcell_files_names[1], skip=1)
tmp <-read_csv(solarcell_files_names[2], skip=1)
tmp <-read_csv(solarcell_files_names[3], skip=1)
tmp <-read_csv(solarcell_files_names[4], skip=1)
solarcell_files_names[4]
solarcell_files_names[4]
tmp <-read_csv(solarcell_files_names[4], skip=1)
tmp2 <-read_csv(solarcell_files_names[4], skip=1)
View(tmp2)
tmp2 <-read_csv2(solarcell_files_names[4], skip=1)
tmp <-read_csv(solarcell_files_names[4], skip=1)
dir_name = "solarzellen_data"
solarcell_files_names = list.files(path = dir_name, pattern="/*.csv")
solarcell_files_names<- paste(dir_name, solarcell_files_names, sep = "/")
solarcell_tbl <- data_frame("datum"=character(0), "zaehlerstand_morgens"= numeric(0), "zaehlerstand_abends" = numeric(0),"produktion"= numeric(0),"eigen_verbrauch"= numeric(0),"eingespeist"= numeric(0))
tmp <-read_csv(solarcell_files_names[4], skip=1)
tmp <-read_csv2(solarcell_files_names[4], skip=1)
for(file in  solarcell_files_names) {
tmp <- read_csv2(file)
bind_rows(solarcell_tbl,tmp)
}
for(file in  solarcell_files_names) {
tmp <- read_csv2(file)
bind_rows(solarcell_tbl,tmp)
}
solarcell_tbl = lapply(solarcell_files, read_csv) %>% bind_rows()
solarcell_tbl = lapply(solarcell_files_names, read_csv2) %>% bind_rows()
View(solarcell_tbl)
2167/6
dir_name = "weather_data/ECA_blended_custom-2"
weather_data_files_names <- list.files(path = dir_name, pattern = "*_STAID004671.txt")
weather_data_files_names <- paste(dir_name, weather_data_files_names, sep = "/")
weather_data__tbl <- lapply(weather_data_files_names, read_csv) %>% bind_rows()
View(weather_data__tbl)
rm(weather_data__tbl)
rm(weather_data_files_names)
weather_data_tbl <- lapply(weather_data_files_names, read_csv(file =weather_data_files_names, skip = 19)) %>% bind_rows()
dir_name = "weather_data/ECA_blended_custom-2"
weather_data_files_names <- list.files(path = dir_name, pattern = "*_STAID004671.txt")
weather_data_files_names <- paste(dir_name, weather_data_files_names, sep = "/")
weather_data_tbl <- lapply(weather_data_files_names, read_csv(file =weather_data_files_names, skip = 19)) %>% bind_rows()
weather_data_tbl <- lapply(weather_data_files_names, read_csv(file = weather_data_files_names[,1], skip = 19)) %>% bind_rows()
weather_data_tbl <- lapply(weather_data_files_names, read_csv(file = weather_data_files_names[1,], skip = 19)) %>% bind_rows()
weather_data_tbl <- lapply(weather_data_files_names, read_csv(file = weather_data_files_names[,], skip = 19)) %>% bind_rows()
weather_data_tbl <- lapply(weather_data_files_names, read_csv(file = weather_data_files_names[], skip = 19)) %>% bind_rows()
weather_data_tbl <- lapply(weather_data_files_names, function(i){
read_csv(i, skip=19)
}) %>% bind_rows()
View(weather_data_tbl)
weather_data_tbl <- lapply(weather_data_files_names, function(i){
read_csv(i, skip=20)
}) %>% bind_rows()
View(weather_data_tbl)
weather_data_tbl <- lapply(weather_data_files_names, function(i){
read_csv(i, skip=20, header = FALSE)
}) %>% bind_rows()
?read_csv
weather_data_tbl <- lapply(weather_data_files_names, function(i){
read_csv(i, skip=20, col_names = FALSE)
}) %>% bind_rows()
View(weather_data_tbl)
colnames(weather_data_tbl) <-c("squid", "datum", "value", "quality_code")
as.character(weather_data_tbl$squid)
str(weather_data_tbl)
weather_data_tbl$squid <- as.character(weather_data_tbl$squid)
str(weather_data_tbl)
weather_data_tbl$squid <- within(weather_data_tbl, squid=="129140" <- "sunduration")
weather_data_tbl$squid[squid=="129140"] <- "sunduration"
weather_data_tbl[squid=="129140"] <- "sunduration"
weather_data_tbl[weather_data_tbl$squid=="129140"] <- "sunduration"
?str_replace_all
??str_replace_all
library(stringr)
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "129140","sunduration" ))
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "129139","cloudcover" ))
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "129148","windspeed" ))
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "129147","humidity" ))
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "129142","precipation" ))
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "129143","snowdepth" ))
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "129144","mean_temp" ))
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "129145","min_temp" ))
weather_data_tbl <- weather_data_tbl %>% mutate(squid = str_replace_all(squid, "100208","max_temp" ))
tail(weather_data_tbl)
tail(100,weather_data_tbl)
?tail
tail(weather_data_tbl, n = 100)
View(tail(weather_data_tbl, n = 100))
weather_data_tbl2 <- weather_data_tbl %>% filter(weather_data_tbl, value =! -9999)
weather_data_tbl2 <- weather_data_tbl %>% filter(weather_data_tbl, value > -9999)
weather_data_tbl2 <- weather_data_tbl %>% filter(weather_data_tbl, value != -9999)
str(weather_data_tbl)
weather_data_tbl$value <- as.numeric(weather_data_tbl$value)
weather_data_tbl2 <- weather_data_tbl %>% filter(weather_data_tbl, value != -9999)
str(weather_data_tbl)
weather_data_tbl2 <- weather_data_tbl %>% filter(weather_data_tbl$value != -9999)
weather_data_tbl2 <- weather_data_tbl %>% filter(value != -9999)
#load solarzellen data
library(readr)
library(dplyr)
library(ggplot2)
dir_name = "solarzellen_data"
solarcell_files_names = list.files(path = dir_name, pattern="/*.csv")
solarcell_files_names<- paste(dir_name, solarcell_files_names, sep = "/")
solarcell_tbl <- data_frame("datum"=character(0), "zaehlerstand_morgens"= numeric(0), "zaehlerstand_abends" = numeric(0),"produktion"= numeric(0),"eigen_verbrauch"= numeric(0),"eingespeist"= numeric(0))
solarcell_tbl = lapply(solarcell_files_names, read_csv2) %>% bind_rows()
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point()
solarcell_tbl$Datum <- as.Date(solarcell_tbl$Datum)
library(lubridate)
solarcell_tbl$Datum <- dmy(solarcell_tbl$Datum)
str(solarcell_tbl)
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23)
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth()
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method=lm,  linetype="dashed",color="dark)
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method=lm,  linetype="dashed",color="dark")
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method=lm,  linetype="dashed",color="dark")
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method=lm,  linetype="dashed")
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method = "lm", formula = y ~ sin(x) ,  linetype="dashed")
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method = "lm", formula = y ~ sin(x) ,  linetype="dashed")
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method = "lm", formula = y ~ cos(x) ,  linetype="dashed")
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method = "gam", formula = y ~ cos(x) ,  linetype="dashed")
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(method = "loess", formula = y ~ cos(x) ,  linetype="dashed")
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(linetype="dashed")
?spectrum
#load solarzellen data
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
dir_name = "solarzellen_data"
solarcell_files_names = list.files(path = dir_name, pattern="/*.csv")
solarcell_files_names<- paste(dir_name, solarcell_files_names, sep = "/")
solarcell_tbl <- data_frame("datum"=character(0), "zaehlerstand_morgens"= numeric(0), "zaehlerstand_abends" = numeric(0),"produktion"= numeric(0),"eigen_verbrauch"= numeric(0),"eingespeist"= numeric(0))
solarcell_tbl = lapply(solarcell_files_names, read_csv2) %>% bind_rows()
solarcell_tbl$Datum <- dmy(solarcell_tbl$Datum)
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) + geom_point(size=2, shape=23) + geom_smooth(linetype="dashed")
ssp <- spectrum(y)
per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
reslm <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t))
summary(reslm)
rg <- diff(range(y))
plot(y~t,ylim=c(min(y)-0.1*rg,max(y)+0.1*rg))
lines(fitted(reslm)~t,col=4,lty=2)   # dashed blue line is sin fit
y <- solarcell_tbl$Produktion
# sinus fit
#1
ssp <- spectrum(y)
per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
reslm <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t))
summary(reslm)
rg <- diff(range(y))
plot(y~t,ylim=c(min(y)-0.1*rg,max(y)+0.1*rg))
lines(fitted(reslm)~t,col=4,lty=2)   # dashed blue line is sin fit
reslm2 <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t)+sin(4*pi/per*t)+cos(4*pi/per*t))
summary(reslm2)
lines(fitted(reslm2)~t,col=3)
ssp <- spectrum(y)
per <- 1/ssp$freq[ssp$spec==max(ssp$spec)]
reslm <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t))
summary(reslm)
t <- solarcell_tbl$Datum
reslm <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t))
t <- 1:2167
reslm <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t))
summary(reslm)
rg <- diff(range(y))
plot(y~t,ylim=c(min(y)-0.1*rg,max(y)+0.1*rg))
lines(fitted(reslm)~t,col=4,lty=2)   # dashed blue line is sin fit
lines(fitted(reslm)~t,col=4,lty=1)   # dashed blue line is sin fit
reslm2 <- lm(y ~ sin(2*pi/per*t)+cos(2*pi/per*t)+sin(4*pi/per*t)+cos(4*pi/per*t))
summary(reslm2)
lines(fitted(reslm2)~t,col=3)
# Step 2: drop anything past the N/2 - 1th element.
# This has something to do with the Nyquist-shannon limit, I believe
# (https://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem)
truncated.fft = raw.fft[seq(1, length(y)/2 - 1)]
?raw.fft
??raw.fft
#2
raw.fft = fft(y)
# Step 2: drop anything past the N/2 - 1th element.
# This has something to do with the Nyquist-shannon limit, I believe
# (https://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem)
truncated.fft = raw.fft[seq(1, length(y)/2 - 1)]
# Step 3: drop the first element. It doesn't contain frequency information.
truncated.fft[1] = 0
# Step 4: the importance of each frequency corresponds to the absolute value of the FFT.
# The 2, pi, and length(y) ensure that omega is on the correct scale relative to t.
# Here, I set omega based on the largest value using which.max().
omega = which.max(abs(truncated.fft)) * 2 * pi / length(y)
plot(omega)
fm = function(Time, HR) {
xc <- cos(2*pi*Time/9)
xs <- sin(2*pi*Time/9)
fit.lm <- lm(HR ~ xc+xs)
fit.lm
}
#3 tidyverse
ggplot(data = solarcell_tbl, aes(x = solarcell_tbl$Datum, y = solarcell_tbl$Produktion)) + geom_point()
ggplot(data = solarcell_tbl, aes(x = solarcell_tbl$Datum, y = solarcell_tbl$Produktion))
+ geom_point()
+ geom_smooth()
ggplot(data = solarcell_tbl, aes(x = solarcell_tbl$Datum, y = solarcell_tbl$Produktion))
+ geom_point()
+ geom_smooth(se=FALSE, method="loess")
#3 tidyverse
ggplot(data = solarcell_tbl, aes(x = solarcell_tbl$Datum, y = solarcell_tbl$Produktion)) + geom_point() + geom_smooth(se=FALSE, method="loess")
#3 tidyverse
ggplot(data = solarcell_tbl, aes(x = solarcell_tbl$Datum, y = solarcell_tbl$Produktion)) + geom_point() + geom_smooth(se=FALSE, method="gam", formula = y ~ s(log(x)))
ggplot(data = solarcell_tbl, aes(x = solarcell_tbl$Datum, y = solarcell_tbl$Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="gam", formula = y ~ s(log(x)))
ggplot(data = solarcell_tbl, aes(x = solarcell_tbl$Datum, y = solarcell_tbl$Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="gam", formula = reslm)
ggplot(data = solarcell_tbl, aes(x = solarcell_tbl$Datum, y = solarcell_tbl$Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="gam", formula = y ~ s(log(x)))
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="gam", formula = y ~ s(log(x)))
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*Datum)+cos(2*pi/per*Datum))
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x))
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x))
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point(size=2, shape=23) +
geom_smooth(linetype="dashed")
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x))
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x))
#manage the dates
solarcell_tbl$YEAR <- year(solarcell_tbl$Datum)
solarcell_tbl$MONTH <- month(solarcell_tbl$Datum)
solarcell_tbl$DAY <- day(solarcell_tbl$Datum)
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, color = YEAR )) + geom_line()
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, color = YEAR )) + geom_bar()
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_point() +
facet_wrap(~YEAR)
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_point() +
facet_wrap(~YEAR) +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=len-se, ymax=len+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
facet_wrap(~YEAR)
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
facet_wrap(~YEAR)
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
facet_wrap(~YEAR)
?summarySE
??summarySE
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
tgc <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
solarcell_tbl <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, color = YEAR )) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, fill = YEAR )) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, fill = YEAR )) +
geom_bar(position=position_dodge(), stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, fill = YEAR )) +
geom_bar(position=position_dodge(),
stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, fill = YEAR )) +
geom_bar(#position=position_dodge(),
stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, fill = YEAR )) +
geom_bar(position=position_dodge(),
stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, fill = YEAR )) +
geom_bar(position= "dodge",
stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion)) +
geom_bar(aes(fill = YEAR)
position= "dodge",
stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion)) +
geom_bar(aes(fill = YEAR),
position= "dodge",
stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion)) +
geom_bar(aes(fill = YEAR),
position= "dodge",
width=0.5,
stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion)) +
geom_bar(aes(fill = YEAR),
position= 'dodge',
width=0.2,
stat='identity')
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion)) +
geom_bar(aes(fill = YEAR),
position= 'dodge',
width=0.2,
stat='identity') +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, fill = YEAR)) +
geom_bar(
position= 'dodge',
width=0.2,
stat='identity')
solarcell_tbl <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
solarcell_tbl <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
source(summary_se.R)
dir_name = "solarzellen_data"
solarcell_files_names = list.files(path = dir_name, pattern="/*.csv")
solarcell_files_names<- paste(dir_name, solarcell_files_names, sep = "/")
solarcell_tbl <- data_frame("datum"=character(0), "zaehlerstand_morgens"= numeric(0), "zaehlerstand_abends" = numeric(0),"produktion"= numeric(0),"eigen_verbrauch"= numeric(0),"eingespeist"= numeric(0))
solarcell_tbl = lapply(solarcell_files_names, read_csv2) %>% bind_rows()
#using lubridate to make the Datum column more usefull
solarcell_tbl$Datum <- dmy(solarcell_tbl$Datum)
ggplot(solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point(size=2, shape=23) +
geom_smooth(linetype="dashed")
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x))
#including second harmonic
ggplot(data = solarcell_tbl, aes(x = Datum, y = Produktion)) +
geom_point() +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x))
#manage the dates
solarcell_tbl$YEAR <- year(solarcell_tbl$Datum)
solarcell_tbl$MONTH <- month(solarcell_tbl$Datum)
solarcell_tbl$DAY <- day(solarcell_tbl$Datum)
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_point() +
facet_wrap(~YEAR) +
geom_smooth(se=FALSE, method="lm", formula = y ~ sin(2*pi/per*x)+cos(2*pi/per*x)+sin(4*pi/per*x)+cos(4*pi/per*x))
solarcell_tbl <- summarySE(solarcell_tbl, measurevar="Produktion", groupvars=c("YEAR","MONTH"))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position=position_dodge(), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion, fill = YEAR )) +
geom_bar(position=position_dodge(), stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position="dodge")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(position="dodge", stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(aes(fill=YEAR), position="dodge", stat="identity")
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(aes(fill=YEAR), position="dodge", stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
ggplot(data = solarcell_tbl, aes(x = MONTH, y = Produktion )) +
geom_bar(aes(fill=YEAR), position=position_dodge(.9), stat="identity") +
facet_wrap(~YEAR) +
geom_errorbar(aes(ymin=Produktion-se, ymax=Produktion+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9))
#3 tidyverse
solarcell_tbl %>% group_by(YEAR, MONTH) %>% summarise()
#3 tidyverse
solarcell_tbl %>% group_by(YEAR, MONTH) %>% summarise(Produktion)
solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion) %>%
ggplot(., aes(Produktion)) + geom_bar()
solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion) %>%
ggplot(., aes(Produktion)) + geom_bar(stat = "identity")
solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion) %>%
ggplot(., aes(Produktion)) + geom_line()
solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion) %>%
ggplot(., aes(Produktion)) + geom_bar()
solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion) %>%
ggplot(., aes(Produktion)) + geom_bar(stat = "identity")
solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion) %>%
ggplot(., aes(.)) + geom_bar(stat = "identity")
#3 tidyverse
solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion) %>%
ggplot(., ) + geom_bar(stat = "identity")
solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion) %>%
ggplot(., ) + geom_bar(stat = "identity")
tt <- solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise()
tt <- solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion)
ggplot(tt, aes(Produktion)) + geom_bar(stat = "identity")
ggplot(tt, aes(tt$Produktion)) + geom_bar(stat = "identity")
str(tt)
tt$Produktion
ggplot(tt, aes(tt$Produktion)) + geom_bar(stat = "identity")
tt$P <- solarcell_tbl %>%
group_by(YEAR, MONTH) %>%
summarise(Produktion)
ggplot(tt, aes(P)) + geom_bar(stat = "identity")
x <-1:72
ggplot(tt, aes(x=x, y=P)) + geom_bar(stat = "identity")
ggplot(tt, aes(x=x, y=P)) + geom_bar(stat = "identity", width = 0.5)
x <-1:nrow(tt)
ggplot(tt, aes(x=x, y=P)) + geom_bar(stat = "identity", width = 0.5)
